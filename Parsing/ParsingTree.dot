digraph graphname {
"0: program" -> "1: stmt_sequence"
"1: stmt_sequence" -> "2: statement"
"1: stmt_sequence" -> "7: stmt_sequence"
"2: statement" -> "3: read_stmt"
"7: stmt_sequence" -> "8: statement"
"7: stmt_sequence" -> "118: stmt_sequence"
"3: read_stmt" -> "4: read"
"3: read_stmt" -> "5: x"
"3: read_stmt" -> "6: ;"
"8: statement" -> "9: if_stmt"
"9: if_stmt" -> "10: if"
"9: if_stmt" -> "11: ("
"9: if_stmt" -> "12: exp"
"9: if_stmt" -> "28: )"
"9: if_stmt" -> "29: stmt_sequence"
"9: if_stmt" -> "117: else_part"
"12: exp" -> "13: simple_exp"
"12: exp" -> "19: comparison_part"
"29: stmt_sequence" -> "30: statement"
"29: stmt_sequence" -> "43: stmt_sequence"
"13: simple_exp" -> "14: term"
"13: simple_exp" -> "18: add_part"
"19: comparison_part" -> "20: comparison_op"
"19: comparison_part" -> "22: simple_exp"
"30: statement" -> "31: assign_stmt"
"43: stmt_sequence" -> "44: statement"
"43: stmt_sequence" -> "110: stmt_sequence"
"14: term" -> "15: factor"
"14: term" -> "17: mul_part"
"20: comparison_op" -> "21: >"
"22: simple_exp" -> "23: term"
"22: simple_exp" -> "27: add_part"
"31: assign_stmt" -> "32: fact"
"31: assign_stmt" -> "33: :="
"31: assign_stmt" -> "34: exp"
"31: assign_stmt" -> "42: ;"
"44: statement" -> "45: dowhile_stmt"
"110: stmt_sequence" -> "111: statement"
"110: stmt_sequence" -> "116: stmt_sequence"
"15: factor" -> "16: x"
"23: term" -> "24: factor"
"23: term" -> "26: mul_part"
"34: exp" -> "35: simple_exp"
"34: exp" -> "41: comparison_part"
"45: dowhile_stmt" -> "46: do"
"45: dowhile_stmt" -> "47: stmt_sequence"
"45: dowhile_stmt" -> "90: while"
"45: dowhile_stmt" -> "91: ("
"45: dowhile_stmt" -> "92: exp"
"45: dowhile_stmt" -> "108: )"
"45: dowhile_stmt" -> "109: ;"
"111: statement" -> "112: write_stmt"
"24: factor" -> "25: 0"
"35: simple_exp" -> "36: term"
"35: simple_exp" -> "40: add_part"
"47: stmt_sequence" -> "48: statement"
"47: stmt_sequence" -> "67: stmt_sequence"
"92: exp" -> "93: simple_exp"
"92: exp" -> "99: comparison_part"
"112: write_stmt" -> "113: write"
"112: write_stmt" -> "114: fact"
"112: write_stmt" -> "115: ;"
"36: term" -> "37: factor"
"36: term" -> "39: mul_part"
"48: statement" -> "49: assign_stmt"
"67: stmt_sequence" -> "68: statement"
"93: simple_exp" -> "94: term"
"93: simple_exp" -> "98: add_part"
"99: comparison_part" -> "100: comparison_op"
"99: comparison_part" -> "102: simple_exp"
"37: factor" -> "38: 1"
"49: assign_stmt" -> "50: fact"
"49: assign_stmt" -> "51: :="
"49: assign_stmt" -> "52: exp"
"49: assign_stmt" -> "66: ;"
"68: statement" -> "69: assign_stmt"
"94: term" -> "95: factor"
"94: term" -> "97: mul_part"
"100: comparison_op" -> "101: >"
"102: simple_exp" -> "103: term"
"102: simple_exp" -> "107: add_part"
"52: exp" -> "53: simple_exp"
"52: exp" -> "65: comparison_part"
"69: assign_stmt" -> "70: x"
"69: assign_stmt" -> "71: :="
"69: assign_stmt" -> "72: exp"
"69: assign_stmt" -> "88: ;"
"95: factor" -> "96: x"
"103: term" -> "104: factor"
"103: term" -> "106: mul_part"
"53: simple_exp" -> "54: term"
"53: simple_exp" -> "64: add_part"
"72: exp" -> "73: simple_exp"
"72: exp" -> "87: comparison_part"
"104: factor" -> "105: 0"
"54: term" -> "55: factor"
"54: term" -> "57: mul_part"
"73: simple_exp" -> "74: term"
"73: simple_exp" -> "78: add_part"
"55: factor" -> "56: fact"
"57: mul_part" -> "58: mulop"
"57: mul_part" -> "60: term"
"74: term" -> "75: factor"
"74: term" -> "77: mul_part"
"78: add_part" -> "79: addop"
"78: add_part" -> "81: simple_exp"
"58: mulop" -> "59: *"
"60: term" -> "61: factor"
"60: term" -> "63: mul_part"
"75: factor" -> "76: x"
"79: addop" -> "80: -"
"81: simple_exp" -> "82: term"
"81: simple_exp" -> "86: add_part"
"61: factor" -> "62: x"
"82: term" -> "83: factor"
"82: term" -> "85: mul_part"
"83: factor" -> "84: 1"
}